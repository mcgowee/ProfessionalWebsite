import{a as f,t as b}from"../chunks/disclose-version.Dltb2gaL.js";import"../chunks/legacy.BBStmGgr.js";import{ar as d,as as i,o as t,$ as s,at as u,au as n,av as A,ap as G}from"../chunks/runtime.CmOnIqvM.js";import{s as w}from"../chunks/render.t95M__oA.js";import{i as M}from"../chunks/if.Dp04ebBQ.js";import{e as O,i as $}from"../chunks/each.D6RxEqG5.js";import{r as q,s as z}from"../chunks/class.C-r-XYq8.js";import{e as k}from"../chunks/events.JOM3tMXR.js";import{b as E}from"../chunks/input.qspI9FlA.js";import{S as J}from"../chunks/Spinner.tCnoGM9Z.js";var N=b("<div><strong> </strong> </div>"),U=b('<div class="flex justify-center items-center mt-2"><!></div>'),B=b('<main class="p-6 bg-white rounded-lg shadow-lg mt-8 svelte-1o1pti3"><h2 class="text-3xl font-semibold mb-4 text-gray-800">Chat with Local LLM</h2> <div class="mb-4 text-gray-600"><p><strong>This chat application is built with <a href="https://svelte.dev/" target="_blank" class="text-indigo-500 hover:underline">Svelte</a> on the frontend and <a href="https://pypi.org/project/Flask/" target="_blank" class="text-green-500 hover:underline">Flask</a> as the API backend.</strong></p> <p>It utilizes a <strong>Local LLM</strong> for generating AI responses, demonstrating advanced capabilities in natural language processing and interaction.</p> <p>For more detailed information about the LangChain framework and its capabilities, please refer to their <a href="https://python.langchain.com/v0.2/docs/tutorials/llm_chain/" target="_blank" class="text-blue-500 hover:underline">official documentation</a>.</p></div> <div class="chat-window border border-gray-300 p-4 h-80 overflow-y-auto mb-4 rounded-lg bg-gray-50"><!> <!></div> <div class="flex"><input placeholder="Type your message..." class="flex-grow p-2 border border-gray-300 rounded-lg mr-2"> <button class="p-2 bg-indigo-500 text-white rounded-lg hover:bg-indigo-600">Send</button></div></main>');function ee(L){let a=u([]),o=u(""),v=u(!1);async function _(){if(t(o).trim()){s(a,[...t(a),{sender:"User",text:t(o)}]),s(v,!0);try{const e=await fetch("https://441fe0d3703a.ngrok.app/api/pandasai",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:t(o)})});if(e.ok){const r=await e.json();s(a,[...t(a),{sender:"ChatGPT",text:r.response}])}else s(a,[...t(a),{sender:"ChatGPT",text:"Failed to get a response from the server."}])}catch{s(a,[...t(a),{sender:"ChatGPT",text:"An error occurred while communicating with the server."}])}finally{s(v,!1)}s(o,"")}}var g=B(),m=d(i(g),4),x=i(m);O(x,1,()=>t(a),$,(e,r)=>{let p=()=>t(r).sender,P=()=>t(r).text;var c=N();const j=G(()=>`${p().toLowerCase()??""}-message mb-2 svelte-1o1pti3`);var h=i(c),F=i(h);n(h);var I=d(h);n(c),A(()=>{z(c,t(j)),w(F,`${p()??""}:`),w(I,` ${P()??""}`)}),f(e,c)});var C=d(x,2);{var T=e=>{var r=U(),p=i(r);J(p),n(r),f(e,r)};M(C,e=>{t(v)&&e(T)})}n(m);var y=d(m,2),l=i(y);q(l);var S=d(l,2);n(y),n(g),E(l,()=>t(o),e=>s(o,e)),k("keydown",l,e=>e.key==="Enter"&&_()),k("click",S,_),f(L,g)}export{ee as component};
