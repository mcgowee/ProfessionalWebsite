import{s as he,r as de}from"../chunks/scheduler.CZ49yVq8.js";import{S as ge,i as me,e as m,s as x,c as f,f as U,g as O,j as k,d as S,a as g,b as $,k as n,m as re,n as Q,o as V,p as Y,q as fe,r as pe,t as K,h as X,l as le,u as _e,v as ve,w as be,x as ye,y as xe}from"../chunks/index.9byxY5b-.js";import{e as oe}from"../chunks/each.D6YF6ztN.js";import{S as ke}from"../chunks/Spinner.Bw0mPyUs.js";function ie(i,e,t){const s=i.slice();return s[11]=e[t].sender,s[12]=e[t].text,s[14]=t,s}function ce(i){let e,t,s=i[11]+"",a,c,I,p=i[12]+"",v,L;return{c(){e=m("div"),t=m("strong"),a=K(s),c=K(":"),I=x(),v=K(p),this.h()},l(_){e=f(_,"DIV",{class:!0});var l=U(e);t=f(l,"STRONG",{});var b=U(t);a=X(b,s),c=X(b,":"),b.forEach(S),I=k(l),v=X(l,p),l.forEach(S),this.h()},h(){g(e,"class",L=i[11].toLowerCase()+"-message mb-2 svelte-18ehueg")},m(_,l){$(_,e,l),n(e,t),n(t,a),n(t,c),n(e,I),n(e,v)},p(_,l){l&1&&s!==(s=_[11]+"")&&le(a,s),l&1&&p!==(p=_[12]+"")&&le(v,p),l&1&&L!==(L=_[11].toLowerCase()+"-message mb-2 svelte-18ehueg")&&g(e,"class",L)},d(_){_&&S(e)}}}function ue(i){let e,t,s;return t=new ke({}),{c(){e=m("div"),_e(t.$$.fragment),this.h()},l(a){e=f(a,"DIV",{class:!0});var c=U(e);ve(t.$$.fragment,c),c.forEach(S),this.h()},h(){g(e,"class","flex justify-center items-center mt-2")},m(a,c){$(a,e,c),be(t,e,null),s=!0},i(a){s||(V(t.$$.fragment,a),s=!0)},o(a){Y(t.$$.fragment,a),s=!1},d(a){a&&S(e),ye(t)}}}function we(i){let e,t,s="SQL QA Chat",a,c,I=`<strong>This chat uses <span class="text-indigo-500">Svelte</span> on the front end and <span class="text-green-500">Flask</span> as the API backend.</strong>
        It leverages <strong>OpenAI&#39;s GPT-3.5</strong> for AI responses to SQL queries.
        <span class="text-red-500 font-bold">This is an initial prototype.</span> The system is designed to interpret natural language questions, translate them into SQL queries, and execute them against a database to provide meaningful answers.`,p,v,L='<p><strong>Summary of the Chinook Database:</strong></p> <p>The Chinook database is a sample database representing a digital media store. It includes tables for artists, albums, media tracks, invoices, and customers, among others. This makes it an excellent resource for practicing SQL queries and learning database management. The schema includes relationships between these tables, such as artists to albums and invoices to customers.</p> <p>For more detailed information, please refer to the <a href="https://www.sqlitetutorial.net/sqlite-sample-database/" target="_blank" class="text-blue-500 hover:underline">SQLite Tutorial</a>.</p> <img src="/src/assets/ChinookDB.png" alt="Chinook Database Schema" class="w-1/3 mt-4"/>',_,l,b,H="What are the genres?",y,w,ee="List the top ten artists with the most albums and add a count.",W,q,te="Show me all albums by Led Zeppelin.",F,A,se="What is the average invoice total?",G,C,B,Z,D,T,J,N,ae="Send",M,R,ne,j=oe(i[0]),d=[];for(let o=0;o<j.length;o+=1)d[o]=ce(ie(i,j,o));let u=i[2]&&ue();return{c(){e=m("main"),t=m("h2"),t.textContent=s,a=x(),c=m("p"),c.innerHTML=I,p=x(),v=m("div"),v.innerHTML=L,_=x(),l=m("div"),b=m("button"),b.textContent=H,y=x(),w=m("button"),w.textContent=ee,W=x(),q=m("button"),q.textContent=te,F=x(),A=m("button"),A.textContent=se,G=x(),C=m("div");for(let o=0;o<d.length;o+=1)d[o].c();B=x(),u&&u.c(),Z=x(),D=m("div"),T=m("input"),J=x(),N=m("button"),N.textContent=ae,this.h()},l(o){e=f(o,"MAIN",{class:!0});var h=U(e);t=f(h,"H2",{class:!0,"data-svelte-h":!0}),O(t)!=="svelte-16t9vs1"&&(t.textContent=s),a=k(h),c=f(h,"P",{class:!0,"data-svelte-h":!0}),O(c)!=="svelte-1i4gr55"&&(c.innerHTML=I),p=k(h),v=f(h,"DIV",{class:!0,"data-svelte-h":!0}),O(v)!=="svelte-181j51c"&&(v.innerHTML=L),_=k(h),l=f(h,"DIV",{class:!0});var r=U(l);b=f(r,"BUTTON",{class:!0,"data-svelte-h":!0}),O(b)!=="svelte-1mcoh0r"&&(b.textContent=H),y=k(r),w=f(r,"BUTTON",{class:!0,"data-svelte-h":!0}),O(w)!=="svelte-ix2woj"&&(w.textContent=ee),W=k(r),q=f(r,"BUTTON",{class:!0,"data-svelte-h":!0}),O(q)!=="svelte-12clf35"&&(q.textContent=te),F=k(r),A=f(r,"BUTTON",{class:!0,"data-svelte-h":!0}),O(A)!=="svelte-a53043"&&(A.textContent=se),r.forEach(S),G=k(h),C=f(h,"DIV",{class:!0});var E=U(C);for(let z=0;z<d.length;z+=1)d[z].l(E);B=k(E),u&&u.l(E),E.forEach(S),Z=k(h),D=f(h,"DIV",{class:!0});var P=U(D);T=f(P,"INPUT",{placeholder:!0,class:!0}),J=k(P),N=f(P,"BUTTON",{class:!0,"data-svelte-h":!0}),O(N)!=="svelte-1uccyc0"&&(N.textContent=ae),P.forEach(S),h.forEach(S),this.h()},h(){g(t,"class","text-3xl font-semibold mb-4 text-gray-800"),g(c,"class","mb-4 text-gray-600"),g(v,"class","mb-4 text-gray-600"),g(b,"class","mr-2 p-2 bg-gray-200 rounded-lg hover:bg-gray-300"),g(w,"class","mr-2 p-2 bg-gray-200 rounded-lg hover:bg-gray-300"),g(q,"class","mr-2 p-2 bg-gray-200 rounded-lg hover:bg-gray-300"),g(A,"class","mr-2 p-2 bg-gray-200 rounded-lg hover:bg-gray-300"),g(l,"class","mb-4"),g(C,"class","chat-window border border-gray-300 p-4 h-80 overflow-y-auto mb-4 rounded-lg bg-gray-50"),g(T,"placeholder","Type your SQL question..."),g(T,"class","flex-grow p-2 border border-gray-300 rounded-lg mr-2"),g(N,"class","p-2 bg-indigo-500 text-white rounded-lg hover:bg-indigo-600"),g(D,"class","flex"),g(e,"class","p-6 bg-white rounded-lg shadow-lg mt-8 svelte-18ehueg")},m(o,h){$(o,e,h),n(e,t),n(e,a),n(e,c),n(e,p),n(e,v),n(e,_),n(e,l),n(l,b),n(l,y),n(l,w),n(l,W),n(l,q),n(l,F),n(l,A),n(e,G),n(e,C);for(let r=0;r<d.length;r+=1)d[r]&&d[r].m(C,null);n(C,B),u&&u.m(C,null),n(e,Z),n(e,D),n(D,T),re(T,i[1]),n(D,J),n(D,N),M=!0,R||(ne=[Q(b,"click",i[5]),Q(w,"click",i[6]),Q(q,"click",i[7]),Q(A,"click",i[8]),Q(T,"input",i[9]),Q(T,"keydown",i[10]),Q(N,"click",i[3])],R=!0)},p(o,[h]){if(h&1){j=oe(o[0]);let r;for(r=0;r<j.length;r+=1){const E=ie(o,j,r);d[r]?d[r].p(E,h):(d[r]=ce(E),d[r].c(),d[r].m(C,B))}for(;r<d.length;r+=1)d[r].d(1);d.length=j.length}o[2]?u?h&4&&V(u,1):(u=ue(),u.c(),V(u,1),u.m(C,null)):u&&(xe(),Y(u,1,1,()=>{u=null}),fe()),h&2&&T.value!==o[1]&&re(T,o[1])},i(o){M||(V(u),M=!0)},o(o){Y(u),M=!1},d(o){o&&S(e),pe(d,o),u&&u.d(),R=!1,de(ne)}}}function Ce(i,e,t){let s=[],a="",c=!1;async function I(){if(a.trim()){t(0,s=[...s,{sender:"User",text:a}]),t(2,c=!0);try{const y=await fetch("https://0aa9efc95e9f.ngrok.app/api/sql_qa",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({question:a})});if(y.ok){const w=await y.json();t(0,s=[...s,{sender:"AI",text:w.response}])}else t(0,s=[...s,{sender:"AI",text:"Failed to get a response from the server."}])}catch{t(0,s=[...s,{sender:"AI",text:"An error occurred while communicating with the server."}])}finally{t(2,c=!1)}t(1,a="")}}function p(y){t(1,a=y)}const v=()=>p("What are the genres?"),L=()=>p("List the top ten artists with the most albums and add a count."),_=()=>p("Show me all albums by Led Zeppelin."),l=()=>p("What is the average invoice total?");function b(){a=this.value,t(1,a)}return[s,a,c,I,p,v,L,_,l,b,y=>y.key==="Enter"&&I()]}class qe extends ge{constructor(e){super(),me(this,e,Ce,we,he,{})}}export{qe as component};
